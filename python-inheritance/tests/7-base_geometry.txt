7-base_geometry
===============

Using 'integer_validator'
-------------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()


## value tests:
---------------

# value is a string - c
>>> bg.integer_validator("isstring", "trololo")
Traceback (most recent call last):
	...
TypeError: isstring must be an integer

# value is 0 - c
>>> bg.integer_validator("iszero", 0)
Traceback (most recent call last):
	...
ValueError: iszero must be greater than 0

# value is a bool - c
>>> bg.integer_validator("isbool", True)
Traceback (most recent call last):
	...
TypeError: isbool must be an integer

# value is None - c
>>> bg.integer_validator("isnone", None)
Traceback (most recent call last):
	...
TypeError: isnone must be an integer

# value is a list - c
>>> bg.integer_validator("islist", [1])
Traceback (most recent call last):
	...
TypeError: islist must be an integer

# value is a tuple - c
>>> bg.integer_validator("istuple", (1,))
Traceback (most recent call last):
	...
TypeError: istuple must be an integer

# value is a set - c
>>> bg.integer_validator("isset", {1})
Traceback (most recent call last):
	...
TypeError: isset must be an integer



## name tests:
--------------

# Test name is an empty string - c
>>> bg.integer_validator("", 45)


## area test:
-------------

# Test to call area method - c
>>> bg.area()
Traceback (most recent call last):
	...
Exception: area() is not implemented
